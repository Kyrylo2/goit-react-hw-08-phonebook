{"version":3,"file":"static/js/718.679348a2.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filter/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const setFilterData = useCallback(\n    e => {\n      const { value } = e.currentTarget;\n      dispatch(filterChange(value.toLowerCase()));\n    },\n    [dispatch]\n  );\n\n  return (\n    <FormControl\n      sx={{\n        minWidth: '350px',\n        maxWidth: '500px',\n        gap: '10px',\n        margin: '0 auto',\n      }}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Filter\"\n        variant=\"outlined\"\n        type=\"search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={setFilterData}\n      />\n    </FormControl>\n  );\n}\n\nexport default React.memo(Filter);\n","import {\n  colors,\n  IconButton,\n  ListItemText,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FaceIcon from '@mui/icons-material/Face';\n\nimport { useDeleteContactMutation } from 'redux/contactsApi';\n\nconst ContactsListItem = ({ name, id, phone }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = async id => {\n    await deleteContact(id);\n  };\n\n  return (\n    <>\n      <ListItem\n        key={id}\n        secondaryAction={\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => handleDelete(id)}\n            color=\"error\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n      >\n        <ListItemAvatar>\n          <Avatar size=\"small\" sx={{ bgcolor: colors.green[500] }}>\n            <FaceIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={name} secondary={phone} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default ContactsListItem;\n","import { Stack, List } from '@mui/material';\n\nimport ContactsListItem from 'components/ContactsListItem';\n\nconst style = {\n  boxShadow: 1,\n  borderRadius: 2,\n  border: '1px solid lightgray',\n  p: 2,\n  minWidth: 350,\n  maxWidth: 500,\n  alignItems: 'center',\n  padding: 0,\n};\n\nconst ContactsList = ({ contacts }) => {\n  return (\n    <>\n      <Stack direction=\"column\" justifyContent=\"flex-start\" alignItems=\"center\">\n        <List sx={style} aria-label=\"contacts\">\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ContactsListItem name={name} id={id} phone={number} key={id} />\n            );\n          })}\n        </List>\n      </Stack>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import { useState } from 'react';\n\nimport { FormControl } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { useAddContactMutation } from 'redux/contactsApi';\n\nexport default function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const handleStateChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const formObj = {\n      name,\n      number,\n    };\n    await addContact(formObj).unwrap();\n\n    // dispatch(addContact(formObj));\n\n    // onSubmit(name, number, nanoid());\n    resetForm();\n  };\n\n  return (\n    <FormControl\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      onChange={handleStateChange}\n      sx={{\n        minWidth: '350px',\n        maxWidth: '500px',\n        gap: '10px',\n        margin: '0 auto',\n      }}\n    >\n      <TextField\n        id=\"outlined-search\"\n        label=\"Full Name\"\n        name=\"name\"\n        type=\"text\"\n        value={name}\n      />\n      <TextField\n        id=\"outlined-search\"\n        label=\"Phone\"\n        name=\"phone\"\n        type=\"tel\"\n        value={number}\n      />\n      <Button variant=\"contained\" size=\"small\" type=\"submit\">\n        Add contact\n      </Button>\n    </FormControl>\n  );\n}\n","import React, { useMemo } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport ContactsForm from 'components/ContactForm';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nconst getFilteredContacts = (contacts, filterValue) =>\n  contacts.filter(el => el.name.toLowerCase().includes(filterValue));\n\nconst Contacts = React.memo(() => {\n  console.log(useGetContactsQuery());\n  const { data: contacts = [], error, isLoading } = useGetContactsQuery();\n  console.log(contacts, isLoading, error);\n\n  const filterValue = useSelector(state => state.filter);\n\n  const contactsArr = useMemo(\n    () => getFilteredContacts(contacts, filterValue),\n    [contacts, filterValue]\n  );\n\n  console.log(contactsArr);\n\n  return (\n    <div>\n      <ContactsForm />\n      {isLoading && !error && (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {!isLoading && error && <div>Error</div>}\n      {!isLoading &&\n        (contactsArr.length > 1 || filterValue !== '' ? <Filter /> : null)}\n\n      {!isLoading && contactsArr.length > 0 && (\n        <ContactsList contacts={contactsArr} />\n      )}\n    </div>\n  );\n});\n\nexport default Contacts;\n"],"names":["Filter","dispatch","useDispatch","setFilterData","useCallback","e","value","currentTarget","filterChange","toLowerCase","FormControl","sx","minWidth","maxWidth","gap","margin","TextField","id","label","variant","type","pattern","onChange","React","name","phone","useDeleteContactMutation","deleteContact","handleDelete","ListItem","secondaryAction","IconButton","edge","onClick","color","Delete","ListItemAvatar","Avatar","size","bgcolor","colors","Face","ListItemText","primary","secondary","style","boxShadow","borderRadius","border","p","alignItems","padding","contacts","Stack","direction","justifyContent","List","map","number","ContactsForm","useState","setName","setNumber","useAddContactMutation","addContact","handleSubmit","preventDefault","formObj","unwrap","component","noValidate","autoComplete","onSubmit","target","Button","console","log","useGetContactsQuery","data","error","isLoading","filterValue","useSelector","state","filter","contactsArr","useMemo","el","includes","getFilteredContacts","Box","display","CircularProgress","length"],"sourceRoot":""}