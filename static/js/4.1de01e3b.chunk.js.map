{"version":3,"file":"static/js/4.1de01e3b.chunk.js","mappings":"sRAUaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MASXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaG,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUJ,EAAAA,KACPE,SAAS,YACTG,IAAI,EAAG,0CACVC,gBAAiBN,EAAAA,KACdE,SAAS,YACTK,MAAM,CAACP,EAAAA,GAAQ,YAAa,MAAO,0BAQxC,OACE,SAAC,KAAD,CACEQ,cAzBkB,CACpBP,KAAM,GACNE,MAAO,GACPC,SAAU,GACVE,gBAAiB,IAsBfP,iBAAkBA,EAClBU,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bd,GAASe,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,SAKG,gBAAGE,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OACC,SAAC,KAAD,WACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEdC,QAAS,EAPX,WASE,SAACC,EAAA,EAAD,CAAKN,GAAI,CAAEO,MAAO,QAAlB,UACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJxB,KAAK,OACLyB,MAAM,WACNC,QAAQ,WACRC,MAAOf,EAAQZ,MAAQ4B,QAAQf,EAAOb,MACtC6B,WAAYjB,EAAQZ,MAAQa,EAAOb,KACnCe,GAAI,CAAEO,MAAO,aAGjB,SAACD,EAAA,EAAD,CAAKN,GAAI,CAAEO,MAAO,QAAlB,UACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJxB,KAAK,QACLyB,MAAM,QACNC,QAAQ,WACRC,MAAOf,EAAQV,OAAS0B,QAAQf,EAAOX,OACvC2B,WAAYjB,EAAQV,OAASW,EAAOX,MACpCa,GAAI,CAAEO,MAAO,aAGjB,SAACD,EAAA,EAAD,CAAKN,GAAI,CAAEO,MAAO,QAAlB,UACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJxB,KAAK,WACLyB,MAAM,WACNC,QAAQ,WACRI,KAAK,WACLH,MAAOf,EAAQT,UAAYyB,QAAQf,EAAOV,UAC1C0B,WAAYjB,EAAQT,UAAYU,EAAOV,SACvCY,GAAI,CAAEO,MAAO,aAGjB,SAACD,EAAA,EAAD,CAAKN,GAAI,CAAEO,MAAO,QAAlB,UACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJxB,KAAK,kBACLyB,MAAM,mBACNC,QAAQ,WACRI,KAAK,WACLH,MACEf,EAAQP,iBAAmBuB,QAAQf,EAAOR,iBAE5CwB,WAAYjB,EAAQP,iBAAmBQ,EAAOR,gBAC9CU,GAAI,CAAEO,MAAO,aAGjB,SAACS,EAAA,EAAD,CACED,KAAK,SACLJ,QAAQ,YACRX,GAAI,CAAEiB,OAAQ,GAAIV,MAAO,OAH3B,0BA3DL,GAuEN,EC9Gc,SAASW,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACvC,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string()\n      .required('Required')\n      .min(8, 'Password must be at least 8 characters'),\n    confirmPassword: Yup.string()\n      .required('Required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ touched, errors }) => (\n        <Form>\n          <Stack\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            spacing={3}\n          >\n            <Box sx={{ width: '100%' }}>\n              <Field\n                as={TextField}\n                name=\"name\"\n                label=\"Username\"\n                variant=\"outlined\"\n                error={touched.name && Boolean(errors.name)}\n                helperText={touched.name && errors.name}\n                sx={{ width: '100%' }}\n              />\n            </Box>\n            <Box sx={{ width: '100%' }}>\n              <Field\n                as={TextField}\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n                sx={{ width: '100%' }}\n              />\n            </Box>\n            <Box sx={{ width: '100%' }}>\n              <Field\n                as={TextField}\n                name=\"password\"\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n                sx={{ width: '100%' }}\n              />\n            </Box>\n            <Box sx={{ width: '100%' }}>\n              <Field\n                as={TextField}\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                error={\n                  touched.confirmPassword && Boolean(errors.confirmPassword)\n                }\n                helperText={touched.confirmPassword && errors.confirmPassword}\n                sx={{ width: '100%' }}\n              />\n            </Box>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ height: 55, width: '200' }}\n            >\n              Register\n            </Button>\n          </Stack>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","validationSchema","Yup","name","required","email","password","min","confirmPassword","oneOf","initialValues","onSubmit","values","resetForm","register","touched","errors","Stack","sx","display","flexDirection","justifyContent","alignItems","spacing","Box","width","as","TextField","label","variant","error","Boolean","helperText","type","Button","height","Register","Helmet"],"sourceRoot":""}